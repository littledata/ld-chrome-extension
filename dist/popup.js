(()=>{"use strict";let e=!1;const t=document.getElementById("toggle-ext-active"),n=document.getElementById("reset-log"),o=document.querySelector("#output-log");document.addEventListener("DOMContentLoaded",(()=>{chrome.runtime.sendMessage({from:"popup",subject:"pageActionClicked"});const e=chrome.runtime.getManifest().version,t=document.getElementById("ext-ver");t&&(t.textContent=`v${e}`)})),null==n||n.addEventListener("click",(()=>{chrome.runtime.sendMessage({from:"popup",subject:"pageResetClicked"}),o&&(o.innerHTML='<p class="font-italic text-info">Log is cleared</p>')})),chrome.runtime.onMessage.addListener((e=>{var t,n;if("background"===e.from&&"updateContent"===e.subject&&void 0!==e.data){const o=JSON.parse(e.data);null===(t=chrome.extension.getBackgroundPage())||void 0===t||t.console.log("MESSAGE RECEIVED FROM BACKGROUND"),null===(n=chrome.extension.getBackgroundPage())||void 0===n||n.console.log(o),l(o)}})),chrome.storage.local.get("state",(t=>{if(e=!!t.state,e){const e=document.getElementById("toggle-ext-active"),t=document.getElementById("monitoring");e&&(e.checked=!0),t&&(t.textContent="enabled")}}));const s=e=>{const t=document.getElementById("monitoring");t&&(t.textContent=e.statusText)};null==t||t.addEventListener("click",(()=>{var t;e=!e,chrome.storage.local.set({state:e}),null===(t=chrome.extension.getBackgroundPage())||void 0===t||t.console.log("Littledata Shopify Connection Debugger has been "+(e?"switched ON":"switched OFF")),chrome.tabs.query({active:!0,currentWindow:!0},(t=>{t[0].id&&chrome.tabs.sendMessage(t[0].id,{from:"popup",subject:"EnableExtension",mode:e},s)}))}));const l=e=>{let t="";if(e.length>0)for(let n=0,o=e.length;n<o;n++)t+=a(e[n]);if(t.length>0){const e=`\n      <table class="table" style="border-collapse:collapse;word-break: break-word;">\n        <thead>\n          <tr>\n            <th style="width:5%">&nbsp;</th>\n            <th style="width:10%">#</th>\n            <th style="width:85%">URL</th>\n          </tr>\n        </thead>\n        <tbody>\n          ${t}\n        </tbody>\n      </table>\n    `;o&&(o.innerHTML=e)}},a=e=>{const t=e.messages.length>0?"remove":"check",n=e.messages.length>0?"danger":"success";let o="<p>There were no errors found on this URL.</p>";if(e.messages.length>0){o=`<p>Errors were encountered on the following URL:</p><p><a href="${e.url}">${e.url}</a></p><ul>`;for(let t=0,n=e.messages.length;t<n;t++)o+=`<li data-error-code="${e.messages[t].code}">${e.messages[t].message}</li>`;o+="</ul>"}return`\n    <tr data-toggle="collapse" data-target="#log-entry-${e.step+1}" class="accordion-toggle table-${n}">\n      <td class="log-entry-status"><span class="fas fa-${t}"></span></td>\n      <td class="log-entry-id">${e.step+1}</td>\n      <td class="log-entry-url">${e.url}</td>\n    </tr>\n    <tr>\n      <td colspan="3" class="hiddenRow"><div class="log-entry-messages accordian-body collapse table-${n}" id="log-entry-${e.step+1}">\n        ${o}\n      </div></td>\n    </tr>\n  `}})();