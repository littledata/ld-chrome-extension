/**
 * @fileoverview Config to enable all rules.
 * @author Robert Fletcher
 */

"use strict";

//------------------------------------------------------------------------------
// Requirements
//------------------------------------------------------------------------------

<<<<<<< HEAD
const builtInRules = require("../lib/rules");
=======
const load = require("../lib/load-rules"),
    Rules = require("../lib/rules");
const rules = new Rules();
>>>>>>> 6c7e671f6f414158c13f6db5311da5440bc68ee0

//------------------------------------------------------------------------------
// Helpers
//------------------------------------------------------------------------------

<<<<<<< HEAD
const allRules = {};

for (const [ruleId, rule] of builtInRules) {
    if (!rule.meta.deprecated) {
        allRules[ruleId] = "error";
    }
}
=======
const enabledRules = Object.keys(load()).reduce((result, ruleId) => {
    if (!rules.get(ruleId).meta.deprecated) {
        result[ruleId] = "error";
    }
    return result;
}, {});
>>>>>>> 6c7e671f6f414158c13f6db5311da5440bc68ee0

//------------------------------------------------------------------------------
// Public Interface
//------------------------------------------------------------------------------

<<<<<<< HEAD
/** @type {import("../lib/shared/types").ConfigData} */
module.exports = { rules: allRules };
=======
module.exports = { rules: enabledRules };
>>>>>>> 6c7e671f6f414158c13f6db5311da5440bc68ee0
